version: '3.8'

services:
  starmap:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: starmap_app
    ports:
      - "8080:8080"
    volumes:
      - starmap_data:/app/starmap_db
      - starmap_logs:/app/logs
    environment:
      - FLASK_ENV=production
      - DATABASE_PATH=/app/starmap_db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/spectral-types"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.starmap.rule=Host(`starmap.local`)"
      - "traefik.http.services.starmap.loadbalancer.server.port=8080"

  # Optional: Add reverse proxy for production
  traefik:
    image: traefik:v2.10
    container_name: starmap_proxy
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    depends_on:
      - starmap

  # Optional: Add monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: starmap_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: starmap_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=starmap
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  starmap_data:
    driver: local
  starmap_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: starmap_network